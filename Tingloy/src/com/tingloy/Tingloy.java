/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.tingloy;

import static java.lang.Thread.*;
import static java.lang.Thread.sleep;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author urielwenceslao
 */
public class Tingloy extends javax.swing.JFrame {

    /**
     * Creates new form Tingloy
     */
    static int minutes = 1;
    static int seconds = 5;
    static int milliseconds = 0;

    
    
    public Tingloy() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Seconds = new javax.swing.JLabel();
        Minutes = new javax.swing.JLabel();
        Milliseconds = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        PortValue = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        Seconds.setFont(new java.awt.Font("Lucida Grande", 0, 36)); // NOI18N
        Seconds.setText("00");

        Minutes.setFont(new java.awt.Font("Lucida Grande", 0, 36)); // NOI18N
        Minutes.setText("00:");

        Milliseconds.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        Milliseconds.setText("000");

        jButton1.setText("jButton1");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        PortValue.setText("Port Value");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(45, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(PortValue)
                        .addGap(58, 58, 58)
                        .addComponent(jButton1))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(Minutes)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Seconds)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Milliseconds)))
                .addGap(64, 64, 64))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Minutes)
                    .addComponent(Seconds)
                    .addComponent(Milliseconds, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 9, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(PortValue)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        
        //state = true;
        PortChecker pc = new PortChecker();
        pc.start();
        try {
            Thread.sleep(5000);
        } catch (InterruptedException ex) {
            Logger.getLogger(Tingloy.class.getName()).log(Level.SEVERE, null, ex);
        }
        PortValue.setText("" + pc.getPortValue());

        Thread t = new Thread(){        
            public void run()
            {
                for(;;)
                {
                    if(pc.getPortValue() == 0)
                    {
                        minutes += 2;
                    }
                    {
                    try
                    {
                        sleep(1);
                        if (milliseconds > 1000) {
                            milliseconds = 0;
                            seconds--;
                        }
                        if (seconds <= 0 && minutes > 0) {
                            seconds = 9;
                            milliseconds = 0;
                            minutes--;
                        }
                        Milliseconds.setText(""+ milliseconds);
                        milliseconds++;

                        if(seconds < 10)
                        Seconds.setText("0"+seconds);
                        else
                        Seconds.setText(""+seconds);

                        if (minutes < 10)
                        Minutes.setText("0" + minutes);
                        else
                        Minutes.setText("" + minutes);
                    }
                    catch(Exception e){}
                    }
                    if (minutes == 0 && seconds == 0)
                    {
                        Minutes.setText("0" + minutes);
                        Seconds.setText(":0"+seconds);
                        Milliseconds.setText("000");
                        break;
                    }
                   PortValue.setText("" + pc.getPortValue());       
                }
            }
        };
     
      t.start();
       
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Tingloy.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Tingloy.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Tingloy.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Tingloy.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
       java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Tingloy().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Milliseconds;
    private javax.swing.JLabel Minutes;
    private javax.swing.JLabel PortValue;
    private javax.swing.JLabel Seconds;
    private javax.swing.JButton jButton1;
    // End of variables declaration//GEN-END:variables
}
